name: Deploy React App to AWS S3

env:
  AWS_REGION: us-west-1

on:
  push:
    branches:
      - main
      - development

jobs:
  build:
    name: Build the application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build

  deploy:
    permissions:
      id-token: write
      contents: read

    name: Upload to Amazon S3
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build

      - name: Log out build artifact
        run: ls -R build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::195789042358:role/GitHubActions
          role-duration-seconds: 900
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy the CloudFormation stack and S3 bucket
        run: |

          # Set DEPLOY_NAME and TEMPLATE_NAME based on the current branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            DEPLOY_NAME=rg-portfolio-production
            TEMPLATE_NAME=prod_stack.yml
          elif [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            DEPLOY_NAME=rg-portfolio-development
            TEMPLATE_NAME=dev_stack.yml
          fi

          # Create or update the CloudFormation stack
          aws cloudformation deploy \
            --stack-name "${DEPLOY_NAME}" \
            --template-file ".cloudformation/${TEMPLATE_NAME}" \
            --parameter-overrides BucketName="${DEPLOY_NAME}" \
            --no-fail-on-empty-changeset \
            --region "${AWS_REGION}"

          # Sync the build directory to the S3 bucket
          aws s3 sync build/ s3://${DEPLOY_NAME} --delete

          # Generate pre-signed URL for the development environment
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            presigned_url=$(aws s3 presign s3://${DEPLOY_NAME}/index.html --expires-in 7200S)
            echo "Pre-signed URL: ${presigned_url}"
          fi

          # Print Website URL for production environment
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            stack_output=$(aws cloudformation describe-stacks --stack-name "${DEPLOY_NAME}")
            website_url=$(echo "${stack_output}" | jq -r '.Stacks[0].Outputs[] | select(.OutputKey=="WebsiteURL") | .OutputValue')
            echo "Website URL: ${website_url}"
          fi
